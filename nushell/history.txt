exit
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)
exit
uhoh
sudo killall -1 gnome-shell
exit
sdfolsdm
sudo systemctl restart gdm3
ls ~/downlaods
ls ~/downloads
ls ~
ls ~/Downloads/
/home/yoyomusho/Downloads/zen-x86_64.AppImage
/home/yoyomusho/Downloads/JetBrainsMonoNLNerdFontMono-Medium.ttf 
open ~/Downloads/
open /home/yoyomusho/Downloads/JetBrainsMonoNLNerdFontMono-Medium.ttf 
ls ~/Downloads/
tar xf zen-browser.tar.xz
tar xf ~/Downloads/zen.linux-x86_64.tar.xz
ls ~/Downloads/
ls
sudo mv zen-browser /opt/
sudo mv zen /opt/
sudo nano /usr/share/applications/zen-browser.desktop
ls /opt/zen
ls /opt/zen/browser/
sudo nano /usr/share/applications/zen-browser.desktop
sudo chmod +x /usr/share/applications/zen-browser.desktop
curl -sS https://starship.rs/install.sh | sh
brew install helix
hx
flatpak install flathub com.helix_editor.Helix
flatpak run com.helix_editor.Helix
helix
hx
exit
config nu
nano config nu
$nu.config-path
nano $nu.config-path
reload
brew doctor
brew install heli
brew install helix
hx
config nu
$env.config.buffer_editor = "hx"
config nu
curl -sS https://starship.rs/install.sh | sh
config nu
~/helix
ls ~/.config
ls ~/.config/helix/
hx ~/.config/helix/config.toml
hx ~/.config/helix/languages.toml
git --version
git config --global user.name "yoyomusho"
git config --global user.email "jepiii@outlook.com"
ssh-keygen -t ed25519 -C "your_email@example.com"
ssh-keygen -t ed25519 -C "jepiii@outlook.com"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub
mkdir git
cd git/
git clone git@github.com:JoePollo/az_iac.git
ls
config nu
hx ~/.config/helix/config.toml
config nu
hx ~/.config/helix/config.toml
config nu
sudo config nu
sudo hx ~/.config/helix/languages.toml
hx --health clipboard
sudo apt install xclip
hx --health clipboard
hx ~/.config/helix/config.toml
config nu
source ~/.config/nushell/config.nu
$nu.config-path
config nu
starship preset gruvbox-rainbow -o ~/.config/starship.toml
cd git/
cd ~/Downloads/
exit nu
config nu
go
go version
cd ~
ls Downloads/
rm -r ~/Downloads/*
ls Downloads/
apt-get
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az
ps aux | grep packagekit<\n>
ps aux | grep packagekit
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash<\n>
az
az login
az login --use-device-code
cd git/
hx az_iac/
go get gopls
go install gopls
go install gopls@latest
go install golang.org/x/tools/gopls@latest
hx ~/.config/helix/languages.toml
hx ~/.config/helix/config.toml
hx az_iac/
gopls
hx az_iac/
go gopls
go
hx ~/.config/helix/languages.toml
go install -v golang.org/x/tools/gopls@latest
$env.GOPATH
brew install gopls
gopls
hx az_iac/
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cargo install --locked zellij<\n>
cargo install --locked zellij
. "$HOME/.cargo/env"
source "$HOME/.cargo/env"
rust
cargo
cargo --version
ls ~
ls -la ~
ls -la ~/.rustup
ls -la ~/.rustup/toolchains/
zen
nu config
config nu
zen
cd git/
hx az_iac/
~/Downloads/
ls
tar -xzf zellij-x86_64-unknown-linux-musl.tar.gz
ls
mv zellij /opt/
ls /opt/
sudo mv zellij /opt/
ls /opt/
zellij
config nu
zellij
config nu
$env.path
zellij
$env.path
ls /.cargo
ls -la ~/.cargo
config nu
zellij
pkill zellij
zellij
zellij kill-session
zellij session
zellij ls
zellij kill-session .
zellij kill-all-sessions
zellij
zellij config
zellij --clean
zellij --check
zellij --version
ls ~/opt
ls /opt/
ls ~/.config/zellij
ux ~/.config/zellij/config.kdl
zellij
ux ~/.config/zellij/config.kdl
zellij
hx ~/.config/zellij/config.kdl
sudo apt update
sudo apt install file
file --version
brew install yazi ffmpeg sevenzip jq poppler fd ripgrep fzf zoxide imagemagick font-symbols-only-nerd-font
brew install yazi ffmpeg sevenzip jq poppler fd ripgrep fzf zoxide imagemagick
cd ~/git
hx az_iac/
zellij
hx az_iac/
brew install pulumi/tap/pulumi
pulumi version
hx az_iac/
hx ~/.config/helix/languages.toml
go install golang.org/x/tools/cmd/goimports@latest
goimports
hx ~/.config/helix/languages.toml
hx ~/.config/helix/languages.toml
ls ~/go/bin/goimports
gp
hx ~/.config/helix/languages.toml
cd az_iac/eventgrid-exercise/
go mod tidy
hx az_iac/
ls ~/.config/zen
config nu
ls /opt/zen/browser/
ls /opt/zen/
ls /usr/share/applications/zen-browser.desktop
ux /usr/share/applications/zen-browser.desktop
hx /usr/share/applications/zen-browser.desktop
hx
hx ~/.config/helix/languages.toml
hx ~/.config/helix/config.toml
hx
hx ~/.config/helix/languages.toml
hx --health go
hx ~/.config/helix/languages.toml
hx ~/.config/helix/config.toml
hx az_iac/
hx ~/.config/helix/config.toml
hx ~/.config/helix/languages.toml
hx az_iac/
zellij
hx az_iac/
hx ~/.config/helix/languages.toml
hx az_iac/
hx --health go
hx az_iac/
hx ~/.config/helix/languages.toml
hx az_iac/
hx --health go
gofmt
hx --health go
curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.5
go env GOPATH
hx --health go
go env GOPATH
ls ~/go/bin
config nu
hx --health go
golangci-lint-langserver
ls ~/go/bin/golangci-lint
. ~/go/bin/golangci-lint
hx --health go
ls ~/go/bin/
config nu
hx --health go
hx ~/.config/helix/languages.toml
hx --health go
golangci-lint-langserver
go install github.com/nametake/golangci-lint-langserver@latest
ls ~/go/bin/
golangci-lint-langserver
hx ~/.config/helix/languages.toml
config nu
hx --health go
$env.path
golangci-lint
config nu
golangci-lint
hx --health go
hx az_iac/
cd az_iac/
git ac "stuff and stuff"
git config --global alias.ac '!git add . && git commit -m'<\n>
git ac "stuff and stuff"
git push
cd ~/.config/helix/
ls
git init
git remote set origin git@github.com:JoePollo/helix-config.git
git remote origin git@github.com:JoePollo/helix-config.git
git remote add origin git@github.com:JoePollo/helix-config.git
git -M main
git branch -M main
git ac "stuff and stuff"
git push
git config --global push.autoSetupRemote true<\n>
git push
git push --set-upstream origin main
git push --set-upstream origin main -f
cd ~/Downloads/
ls
tar -xzf i3-4.24.tar.xz
tar -xz i3-4.24.tar.xz
tar 
tar --help
tar -xf i3-4.24.tar.xz
ls
ls i3-4.24/
mv ./i3-4.24 /opt/
sudo mv ./i3-4.24 /opt/
cd ~/.config/helix
hx readme.md
ls ~/.bun
config nu
bun
bun add --dev --exact prettier
prettier
bun prettier
ls
sudo mv node_modules ~
ls ~/node_modules/
bun prettier
ls
hx languages.toml
rm bun.lock
hx readme.md
hx languages.toml
hx readme.md
hx languages.toml
bun prettier --parser markdown
bun add -d prettier
ls
rm -r node_modules/
rm bun.lock
bun prettier
prettier
ls /opt/
ls ~
ls ~/node_modules/
ls ~/node_modules/prettier/
ls ~/node_modules/prettier/bin
bun prettier --parser markdown ./readme.md
brew install marksman
marksman
hx languages.toml
hx readme
hx --health markdown
brew install dprint
hx languages.toml
cd ~/git
dprint init
hx dprint.json
hx readme.md
cd ~/.config/helix
hx readme.md
hx --health markdown
ls ~/git
hx --health markdown
hx readme.md
git ac "stuff"
git push
ls /opt/
firefox
sudo apt install i3
sudo hx /usr/share/xsessions/i3.desktop
hx /usr/share/xsessions/i3.desktop
sudo helix /usr/share/xsessions/i3.desktop
sudo nano /usr/share/xsessions/i3.desktop
sudo chmod +x /usr/share/xsessions/i3.desktop<\n>
sudo rm /usr/share/xsessions/i3.desktop
ls /usr/share/xsessions
cat /usr/share/xsession/pop.desktop
cat /usr/share/xsessions/pop.desktop
ls /opt/i3-4.24/
rm -r /opt/i3-4.24/
sudo rm -r /opt/i3-4.24/
sudo apt install i3
bluetooth
settings
service bluetooth start
bluetoothctl
ls /etc/pulse/
ls /etc/bluetooth/
ls /etc/bluetooth/main.conf
hx /etc/bluetooth/main.conf
ls ~/.config/helix/
hx
cd ~/.config/helix
hx readme.md
sudo apt install dmenu
hx readme.md
xrandr
xrandr --output HDMI-1 --primary
i3-msg move workspace to put HDMI-1
i3-msg move workspace to output HDMI-1
i3-msg move workspace to output "HDMI-1"
i3-msg -t get_outputs<\n>
i3-msg 'move workspace to output HDMI-1'<\n>
i3-msg "workspace 1; move workspace to output HDMI-1"<\n>
ls ~/.config/i3/
hx ~/.config/i3/config
fc-list
fc-list | grep jetbrain
fc-list | grep nerd
hx ~/.config/helix/readme.md
sudo apt install libconfig-dev libdbus-1-dev libegl-dev libev-dev libgl-dev libepoxy-dev libpcre2-dev libpixman-1-dev libx11-xcb-dev libxcb1-dev libxcb-composite0-dev libxcb-damage0-dev libxcb-glx0-dev libxcb-image0-dev libxcb-present-dev libxcb-randr0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-shape0-dev libxcb-util-dev libxcb-xfixes0-dev meson ninja-build uthash-dev
sudo apt install picom
which picom
ls ~/bin/picom
ls /usr/bin/picom
ls /usr/bin/
picom
sudo apt install polybar
hx ~/.config/helix/readme.md
polybar
ls /usr/bin/polybar
hx ~/.config/polybar/config.ini
ls /usr/bin/polybar
which polybar
ls -la ~/.config
polybar mybar
where polybar
which polybar
rm -r /usr/bin/polybar
sudo rm -r /usr/bin/polybar
ls /usr/bin/polybar
ls /usr/bin/
test
ls
config nu
sudo apt install polybar
polybar
sudo apt uninstall polybar
sudo apt remove --purge polybar
sudo apt install polybar
hx /etc/polybar/config.ini
sudo hx
sudoedit /etc/polybar/config.ini
touch /etc/polybar/config.ini
sudo touch /etc/polybar/config.ini
mkdir /etc/polybar/
sudo mkdir /etc/polybar/
sudoedit /etc/polybar/config.ini
sudoedit helix /etc/polybar/config.ini
sudo nano /etc/polybar/config.ini
polybar
polybar example
polybar example --config=/etc/polybar/config.ini
cd ~/git
git clone git@github.com:adi1090x/polybar-themes.git
cd polybar-themes/
chmod +x setup.sh
./setup.sh
ls ~/.config/polybar/launch.sh
./setup.sh
~/.config/polybar/launch.sh
~/.config/polybar/launch.sh --shapes
sudo ~/.config/polybar/launch.sh --shapes
ls ~/.config/polybar/
ls ~/.config/polybar/shapes/
ls /etc/polybar/
hx /etc/polybar/config.ini
nano /etc/polybar/config.ini
cd ~/.config/polybar/
ls
mkdir toph
cd toph/
hx config.ini
cp config.ini /etc/polybar/
sudo rm /etc/polybar/config.ini
sudo cp config.ini /etc/polybar/
polybar toph
polybar --config=/etc/polybar/config.ini toph
cd ~/.config
git init
git remote add origin git@github.com:JoePollo/config.git
git branch -M main
git ac "config shit"
git push
git push --set-upstream origin main
ls helix/
cd helix/
git remove
ls -la
rm .git
rm -r .git
ls
cd ..
git ac "stuff"
git push
git rm -r --cached helix
git ac "test"
git push
ls
hx ~/.config/polybar/config.ini
ls
fc-list | grep JetBrain
nano /etc/polybar/config.ini
sudo nano /etc/polybar/config.ini
ls /usr/share/backgrounds/pop/
sudo apt install feh<\n>
feh --bg-scale /usr/share/backgrounds/pop/ahmadreza-sajadi-10140-edit.jpg
feh --bg-scale /usr/share/backgrounds/pop/benjamin-voros-250200.jpg
feh --bg-scale /usr/share/backgrounds/pop/ferdinand-stohr-149422.jpg
feh --bg-scale /usr/share/backgrounds/pop/galen-crout-175291.jpg
feh --bg-scale /usr/share/backgrounds/pop/jad-limcaco-183877.jpg
feh --bg-scale /usr/share/backgrounds/pop/jake-hills-36605.jpg
feh --bg-scale /usr/share/backgrounds/pop/nick-nazzaro-bedroom.png
feh --bg-scale /usr/share/backgrounds/pop/nick-nazzaro-desert.png
cd ~/.config
git ac "stuff"
git push
ls latr
ls -latr
ls -la
sudo apt install rofi<\n>
rofi
rofi -show
mkdir -p ~/.config/rofi
mkdir rofi
rofi -dump-config > ~/.config/rofi/config.rasi
ls rofi/
rofi -dump-config | ~/.config/rofi/config.rasi
cd rofi/
touch config.rasi
rofi -dump-config | ~/.config/rofi/config.rasi
ls
open config.rasi
ls
hx config.rasi
hx catppuccin-mocha.rasi
hx config.rasi
rofi -show
hx ~/.config/i3/config
cd ..
cd helix/
ls
mv readme.md ..
cd ..
ls 
hx readme.md
hx ./rofi/config.rasi
hx ~/.config/i3/config
hx readme.md
git ac "holy shit"
git push
sudo apt install snapd
sudo systemctl enable --now snapd.socket<\n>
sudo snap install whatsapp-for-linux<\n>
snap
snap install whatsapp-for-linux
sudo snap install whatsapp-for-linux
sudo apt install flatpak<\n>
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo<\n>
flatpak install flathub io.github.mimbrero.WhatsAppDesktop<\n>
firefox
brew install --cask whatsapp
flatpak install flathub io.github.mimbrero.WhatsAppDesktop<\n>
flatpak run io.github.mimbrero.WhatsAppDesktop<\n>
config nu
whatsapp
ls /etc/pulse/
ls /etc/pulse/client.conf.d/
ls ~/.config/pulse/cookie
sudo nano /etc/pulse/default.pa
hx ~/.config/i3/config
whatsapp
ls ~/Pictures/
sudo snap install spectacle
hx ~/.config/i3/config
apt install flameshot
sudo apt install flameshot
flameshot
flameshot gui
flameshot gui --clipboard
whatsapp
hx ~/.config/i3/config
whatsapp 
hx /etc/pulse/default.pa
cd ~/.config
whats
whatsapp 
hx ~/.config/i3/config
bluetoothctl
sudo apt install blueman<\n>
blueman
blueman-manager
hx ~/.config/i3/config
cd ~/.config
git ac "everything"
git push
hx readme.md
sleep
systemctl suspend
config nu
whatsapp
az
az login --use-device-code
cd git/az_iac/eventgrid-exercise/
pulumi up
pulumi login --local
pulumi logout
ls
pulumi login
pulumi login --local
pulumi up
pulumi login .
pulumi logout
pulumi login .
pulumi login file://./pulumi.yaml
pulumi login file://./Pulumi.yaml
pulumi login file://.
ls
ls -la
ls .pulumi
pulumi up
mv Pulumi.dev.yaml .pulumi
mv Pulumi.yaml .pulumi
pulumi up
mv .pulumi/Pulumi.yaml .
pulumi up
ls .pulumi
pulumi up
go mod tidy
pulumi up
hx git/az_iac/
pulumi up
cd ~/.config/
hx readme.md
cd ~/git/az_iac/eventgrid-exercise/
ls
whatsapp
pulumi up
hx git/az_iac/
pulumi up
cd git/az_iac/
git ac "stuff"
git push
pulumi down
cd eventgrid-exercise/
open clipboard | save screenshot_$(date now | strftime "%Y-%m-%d_%H-%M-%S").png<\n>
cargo install nu_plugin_clipboard<\n>
plugin add ~/.cargo/bin/nu_plugin_clipboard<\n>
config nu
si
cd git/az_iac/
si
config nu
$env.config.buffer_editor = "hx"
config nu
~/.config/nushell/config.nu
hx ~/.config/nushell/config.nu
si
config nu
cd ..
mkdir message-based-solutions
cd message-based-solutions/
pulumi init
pulumi new
hx
hx ~/.config/helix/config.toml
hx
$path.env
$env
config nu
hx ~/.config/helix/config.toml
cd git/az_iac/message-based-solutions/
pulumi up
git ac "stuff"
git push
hx
config nu
pulumi down
sleep
cd ~/.config
git ac "stuff"
git push
sleep
restart
reboot
nm-applet &
nmcli dev wifi list
ncmli dev wifi connect "7E:57:1A:75:DE:B7" password ""
nmcli dev wifi connect "7E:57:1A:75:DE:B7" password "JZUR-KawX-qK84-U1eN"
nmcli dev wifi connect "iPhone" password "JZUR-KawX-qK84-U1eN"
nmcli dev wifi connect "iPhone" password "JzUR-KawX-qK84-U1eN"
blueman-manager
xrandr --output $(i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary<\n>
xrandr --output (i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary<\n>
xrandr --output $(i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary && MONITOR=$(xrandr --listmonitors | grep "+" | awk '{print $4}') polybar --reload your_bar_name &<\n>
xrandr --output (i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary; let MONITOR = (xrandr --listmonitors | grep "+" | awk '{print $4}'); polybar --reload toph
ls ~/.config
ls ~/.config/polybar/
xrandr --output (i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary; let MONITOR = (xrandr --listmonitors | grep "+" | awk '{print $4}'); polybar --reload toph --config=~/.config/polybar/config.ini
open ~/.config/polybar/config.ini
hx ~/.config/polybar/config.ini
xrandr --output (i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary; let MONITOR = (xrandr --listmonitors | grep "+" | awk '{print $4}'); polybar --reload toph --config=~/.config/polybar/toph/config.ini
ls ~/.config/i3/
xrandr --output (i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).output') --primary; let MONITOR = (xrandr --listmonitors | grep "+" | awk '{print $4}'); polybar --reload toph --config=~/.config/polybar/toph/config.ini
hx ~/.config/helix/config.toml
hx ~/.config/nushell/config.nu
primary
hx ~/.config/nushell/config.nu
hx ~/.config/i3/config
sleep
hx ~/.config/i3/config
source ~/.config/i3/config
which polybar
i3-msg "workspace 1; move workspace to output HDMI-1"
i3-msg restart
ls -la /etc/polybar/config.ini
polybar --config=/etc/polybar/config.ini toph
ls ~/.config/
ls ~/.config/polybar/
ls ~/.config/polybar/toph/
i3-msg restart
polybar --config=~/.config/polybar/toph/config.ini toph
hx ~/.config/i3/config
ip link show<\n>
polybar --config=~/.config/polybar/toph/config.ini toph
iwconfig
polybar --config=~/.config/polybar/toph/config.ini toph
hx ~/scripts/i3-set-primary-monitor.sh
ls ~/scripts
chmod +x ~/scripts/i3-set-primary-monitor.sh<\n>
hx ~/.config/polybar/toph/config.ini
sudo apt install jq
xrandr | grep " connected"<\n>
xrandr --output HDMI-1 --auto --primary --output eDP-1 --auto --right-of HDMI-1
firefox
sudo apt install arandr
arandr
ls ~/.screenlayout/
config nu
monitors
config nu
monitors
polybar --config=~/.config/polybar/toph/config.ini toph
i3-msg restart
hx ~/.config/i3/config
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rust --version
cargo --version
ls
cd git
ls
whatsapp
mkdir leetcodal
cd leetcodal
hx
config nu
blueman-manager
git clone https://github.com/hastinbe/i3-volume.git ~/i3-volume
hx ~/.config/polybar/toph/config.ini
i3-msg restart
hx ~/.config/polybar/toph/config.ini
i3-msg restart
pulseaudio
cd git/
ls
cd leetcodal/
mkdir rust
cd rust/
hx two_sum
hx two_sum.rs
hx --health rust
cd ~/.config/helix/themes
mkdir ~?.config/helix/themes
mkdir ~/.config/helix/themes
cd ~/.config/helix/themes
hx carbon.toml
hx ~/.config/
cd ~/.config
git pull
hx
cd ~/git/leetcodal/rust/
ls
hx two_sum.rs
hx --health rust
hx ~/.config/helix/languages.toml
hx two_sum.rs
rustup component add rust-analyzer
hx two_sum.rs
hx ~/.config/helix/languages.toml
hx two_sum.rs
hx ~/.config/helix/languages.toml
ls
rust init
cargo init
ls
rm two_sum.rs
ls src
cd src/
cd ..
ls
rm Cargo.toml
rm -r src/
mkdir two_sum
rm two_sum/
mkdir easy
cd ..
rm -r rust/
mkdir easy
cd easy
mkdir rust
cd rust/
mkdir two_sum
cd two_sum/
cargo init
hx
ls ../../
cd ../../
ls
mkdir python
cd python
python --version
python3 --version
hx ~/.config/helix/config.nu
hx ~/.config/nushell//config.nu
python --version
pip install pyright
which pip
python -m pip
uv --version
uv
python -m pip show pip
python -m pip install uv
brew install uv
uv --version
uv pip install pyright
uv pip install pyright --system
uvx pip install pyright
ls
ls -la
uv tool install ruff
ruff --version
uv tool install pyright
pyright --version
uv tool install pyright-langserver
uv tool install black
cd git/leetcodal/easy/python/
hx two_sum.py
hx ~/.config/helix/config.toml
config nu
sudo apt install wezterm
sudo apt update
sudo apt install wezterm
curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/wezterm-fury.gpg
echo 'deb [signed-by=/etc/apt/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list
sudo apt install wezterm
sudo apt update<\n>
sudo apt install wezterm
ls
cd git
git clone git clone https://github.com/ryanoasis/nerd-fonts.git
git clone https://github.com/ryanoasis/nerd-fonts.git
config nu
wezterm
sleep
ls ~/git
cd ~/git/az_iac/
blueman-manager
pavucontrol<\n>
sudo apt install pavucontrol
pavucontrol
config nu
volume
config nu
wezterm
i3-msg restart
mkdir -p ~/.config/wezterm
mkdir ~/.config/wezterm
hx ~/.config/wezterm/wezterm.lua
cd ~/git
hx ~/.config/wezterm/wezterm.lua
config nu
which nushell
which nu
hx ~/git/az_iac/
i3-msg restart
which nu
i3-msg restart
cd ~/git
git clone https://github.com/alacritty/alacritty.git
cd alacritty/
rustup override set table
rustup override set stable
rustup update stable
apt install cmake g++ pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
sudo apt install cmake g++ pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
cargo build --release
infocmp alacritty
sudo cp target/release/alacritty /usr/local/bin
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database
i3-msg restart
cd ~/git/az_iac/
touch ~/.config/alacritty/alacritty.toml
cd ~/.config/
mkdir alacritty
cd alacritty/
touch alacritty.toml
sudo apt install fonts-firacode fonts-noto-color-emoji fonts-font-awesome
cd ~/git/az_iac/
hx alacritty.toml
cd ~/git/alacritty/
git checkout ligature
git fetch origin
git checkout ligature
cd ..
cd ~/git/alacritty/
volume
which feh
ls /media
ls /media/yoyomusho/
sleep
ls /media/yoyomusho/
ls /usr/share/backgrounds/pop/
i3-msg restart
feh --bg-scale /usr/share/backgrounds/pop/nick-nazzaro-desert.png
ls ~/.config/
ls ~/.config/alacritty/
hx ~/.config/alacritty/alacritty.toml
blueman-manager
cd ~/Downloads/
ls
chmod +x Ghostty-1.1.3-dev+0000000-x86_64.AppImage
ls /
ls ~
mkdir -p ~/apps
mkdir ~/apps
mv Ghostty-1.1.3-dev+0000000-x86_64.AppImage ~/apps/
ls ~/apps/
cd ~/apps/
. Ghostty-1.1.3-dev+0000000-x86_64.AppImage
source Ghostty-1.1.3-dev+0000000-x86_64.AppImage
ls
Ghostty-1.1.3-dev+0000000-x86_64.AppImage
chmod +x Ghostty-x86_64.AppImage
ls
chmod -x Ghostty-1.1.3-dev+0000000-x86_64.AppImage
Ghostty-1.1.3-dev+0000000-x86_64.AppImage
./Ghostty-1.1.3-dev+0000000-x86_64.AppImage
chmod +x Ghostty-1.1.3-dev+0000000-x86_64.AppImage
md ~/.config/ghostty/
mkdir ~/.config/ghostty/
cd ~/.config/ghostty/
hx config
hx ~/.config/alacritty/alacritty.toml
cd ~/.config/ghostty/
hx config
./Ghostty-1.1.3-dev+0000000-x86_64.AppImage
hx ~/.config/ghostty/config
cd ~/apps/
ls
./Ghostty-1.1.3-dev+0000000-x86_64.AppImage
hx ~/.config/ghostty/config
./Ghostty-1.1.3-dev+0000000-x86_64.AppImage
i3-msg restart
ghostty
taco
ghostty
ls
cwdd
cwd
pwd
i3-msg restart
hx ~/.config/ghostty/config
hx ~/.config/i3/config
i3-msg restart
hx ~/.config/i3/config
hx ~/.config/ghostty/config
i3-msg restart
hx ~/.config/ghostty/config
i3-msg restart
cd ./git/az_iac/
ls
cd app-config/
ls
cd ..
cd eventgrid-exercise/
ls
hx
hx ~/.config/helix/config.toml
ghostty +list-themes
hx ~/.config/ghostty/config
sleep
blueman-manager
o
config nu
whatsapp
which obsidian
sudo apt install mlocate
sudo updatedb
mlocate obsidian
locate obsidian
ls ~/Downloads/
ls ~/apps/
mv ~/Downloads/Obsidian-1.8.9.AppImage ~/apps/
ls ~/apps/
/home/yoyomusho/apps/Obsidian-1.8.9.AppImage
cd ~/apps/
chmod +x Obsidian-1.8.9.AppImage
/home/yoyomusho/apps/Obsidian-1.8.9.AppImage
config nu
cd ~/git/leetcodal/
mkdir go
cd go/
mkdir two_sum
mv two_sum TwoSum
ls
hx
cd TwoSum/
go init 
go help
main.go
cd ~/git/
hx az_iac/
hx ~/.config/ghostty/config
go run main.go
hx ~/.config/ghostty/config
go run main.go
hx ~/git/az_iac/
go run main.go
hx ~/.config/ghostty/config
go run main.go
hx ~/.config/ghostty/config
go run main.go
hx ~/git/az_iac/
go run main.go
go test -v
go mod tidy
go help modules
hx ~/git/az_iac/
hx go.mod
go help modules
go test -v
hx
cd ../..
git init 
git branch -M main
git remote add origin git@github.com:JoePollo/leetcodal.git
git ac "stuff"
ls
mv -r go easy/go
mv go easy/
ls
ls easy
git ac "stuff"
ls ./easy/rust/
ls ./easy/rust/two_sum/
cd easy/rust/
cd ..
rm -r rust/
cd ..
git ac "stuff"
git push
git push --set-upstream origin main
hx main.go
clear
cd
ls
cd ~/git/leetcodal/easy/go/
mkdir PalindromeNumber
cd PalindromeNumber/
go mod init
go help mod init
go help mod init PalindromeNumber
go mod init PalindromeNumber
ls
hx ~/.config/i3/config
blueman-manager
cd
cd ~/git/leetcodal/easy/go/
cd PalindromeNumber/
hx
cd easy/go/PalindromeNumber/
go test -v
ls
ls ../TwoSum/
mv test_main.go main_test.go
hx
go test -v
git ac "more stuff"
git push
sleep
blueman-manager
o
config nu
bash /home/yoyomusho/apps/Obsidian-1.8.9.AppImage &
bash source /home/yoyomusho/apps/Obsidian-1.8.9.AppImage &
bash -c "/home/yoyomusho/apps/Obsidian-1.8.9.AppImage &"
blueman
cd ~/.config/
git pull
git ac "linux changes"
git pull
git config pull.rebase true
git pull
git ac "stuff?"
git pull
git ac "more stuff"
git pull
ls
hx ~/.config/helix/config.toml
git ac "everything"
git push
git push -f
config nu
hx
hx ../TwoSum/
cd ~/git/az_iac/
mkdir ServiceBusQueueExercise
cd ServiceBusQueueExercise/
go mod init
hx go.mod
go mod init
rm go.mod
go mod init ServiceBusQueueExercise
ls
hx
hx ~/.config/helix/config.toml
hx main.go
hx
pulumi up
pulumi new
pulumi new --force
ls
open main.go
ls
go mod tidy
pulumi up
hx
cd ../../
ls
mkdir AzureConsoleApp
cd AzureConsoleApp/
go mod init Az204ConsoleApp
ls
cd ..
hx az_iac/
cd AzureConsoleApp/
go get github.com/Azure/azure-sdk-for-go/sdk/azidentity
go get github.com/Azure/azure-sdk-for-go/sdk/messaging/azservicebus
hx
cd ../az_iac/
hx
hx
hx ~/.config/helix/config.toml
ls ..
cd ../AzureConsoleApp/
go run main.go
cd ../az_iac/
HX
go run main.go
cd ../az_iac/
hx
hx
cd ServiceBusQueueExercise/
go get github.com/pulumi/pulumi-azure-native/sdk/go/azure/core
git init
git branch -M main
pulumi down
git config --global init.defaultBranch main
git remote add origin git@github.com:JoePollo/AzureConsoleApp.git
git ac "junk and stuff"
git push
git push --set-upstream origin main
hx
hx
sleep
cd ../AzureConsoleApp/
go run main.go
blueman
go run main.go
cd ../az_iac/
ls
cd ServiceBusQueueExercise/
ls
pulumi up
go get github.com/pulumi/pulumi-azure-native/sdk/go/azure/core
go mod tidy
hx go.mod
hx
gx
hx
pulumi up
hx
pulumi up
hx
go run main.go
cd ../../AzureConsoleApp/
go run main.go
cd ../az_iac/ServiceBusQueueExercise/
pulumi up
pulumi down
pulumi up
hx
cd ../../AzureConsoleApp/
go run main.go
cd ../az_iac/ServiceBusQueueExercise/
pulumi down
git ac "stuff"
git push
cd ../../AzureConsoleApp/
git ac "other stuff"
git push
cd ../az_iac/ServiceBusQueueExercise/
hx
git ac "wow"
cd ..
mkdir AzureStorageQueueApp
hx
cd ..
mkdir StorageQueueExercise
cd StorageQueueExercise/
go mod init StorageQueueExercise
ls
hx AzureConsoleApp/
go get github.com/pulumi/pulumi-azure-native-sdk/resources/v2
go get github.com/pulumi/pulumi/sdk/v3/go/pulumi
pulumi new --force
hx az_iac/
cd az_iac/
ls
cd StorageQueueExercise/
pulumi up
pulumi down
hx
sleep
i3-msg restart
feh --bg-scale /usr/share/backgrounds/pop/nick-nazzaro-desert.png
polybar --config=~/.config/polybar/toph/config.ini toph
killall polybar
polybar --config=~/.config/polybar/toph/config.ini toph
i3-msg restart
monitors
blueman
hx ~/.config/helix/config.toml
hx ~/.config/i3/config
cd git/
ls
hx AzureStorageQueueApp/
hx az_iac/
cd git/az_iac/StorageQueueExercise/
ls
hx ~/.config/starship.toml
guh
hx
go get github.com/pulumi/pulumi-azure-native-sdk/authorization/v2
pulumi run
pulumi up
o
hx
cd ../../
ls
config nu
ls
cd AzureStorageQueueApp/
hx
go mod init StorageQueueApp
go get github.com/Azure/azure-sdk-for-go/sdk/azidentity
go get github.com/Azure/azure-sdk-for-go/sdk/storage/azblob
go get github.com/Azure/azure-sdk-for-go/sdk/storage/azqueue
hx
cd ../AzureConsoleApp/
hx
